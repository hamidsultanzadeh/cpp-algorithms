/* 
 * File:   main.cpp
 * Author: hamidsultanzadeh
 *
 * Created on September 24, 2019, 4:42 PM
 */

#include <iostream>
#include <algorithm>

using namespace std;

int knapSack(int W, int weigth[], int value[], int n){
    
    int i,w;
    int K[n+1][W+1];
    
    for(i=0 ; i<=n ; i++){
        
        for(w=0 ; w<=W ; w++){
            
            if(i==0 || w==0) K[i][w]=0;
            
            else if(weigth[i-1]<=w) K[i][w] = max(value[i-1] + K[i-1][w-weigth[i-1]] , K[i-1][w]);
            
            else K[i][w] = K[i-1][w];
            
        }
        
    }
    
    return K[n][W];
}

int main(int argc, char** argv) {
    
    int value[] = {4,6,9}; 
    int weigth[] = {2,4,3}; 
    int  W = 4; 
    int n = sizeof(value)/sizeof(value[0]); 
    
    cout<<"Min Weigth and Max Value : "<<knapSack(W, weigth, value, n);

    return 0;
}