/* 
 * File:   main.cpp
 * Author: hamidsultanzadeh
 *
 * Created on September 27, 2019, 5:43 PM
 */

#include <iostream>
using namespace std;

void merge(int arr[],int left,int middle,int right){
    
    int i,j,index;
    int n1 = middle - left + 1;
    int n2 = right - middle;
    
    int arrLeft[n1];
    int arrRight[n2];
    
    for(i=0 ; i<n1 ; i++) arrLeft[i] = arr[left+i];
    
    for(j=0 ; j<n2 ; j++) arrRight[j] = arr[middle+1+j];
    
    i = j = 0;
    index=left;
    while(i<n1 && j<n2){
        if(arrLeft[i]<=arrRight[j]){
            arr[index] = arrLeft[i];
            i++;
        } else {
            arr[index] = arrRight[j];
            j++;
        }
        index++;
    }
    
    while(i<n1){
        arr[index] = arrLeft[i];
        i++;
        index++;
    }
    
    while(j<n2){
        arr[index] = arrRight[j];
        j++;
        index++;
    }
    
}

void mergeSort(int arr[],int left, int right){
    
    int middle;
    
    if(right>left){
        
        middle = left+(right-left)/2;
        
        mergeSort(arr,left,middle);
        mergeSort(arr,middle+1,right);
        
        merge(arr,left,middle,right);
        
    }
    
}

void print(int arr[],int size){
    for(int i=0 ; i<size ; i++){
        cout<<arr[i]<<" ";
    }
}

int main(int argc, char** argv) {
    
    int arr[5] = {2,4,5,1,67};
    
    mergeSort(arr,0,5-1);
    
    print(arr,5);
    
    return 0;
}